---
import PaginaInterna from '../../layouts/PaginaInterna.astro';
import { membros, type MembroEquipe } from '../../data/equipeDados';
import { Icon } from 'astro-icon/components';

export async function getStaticPaths() {
 return membros.map(membro => ({
  params: { slug: membro.slug },
  props: { membro },
 }));
}

const { membro } = Astro.props as { membro: MembroEquipe };

function getIconName(plataforma: MembroEquipe['redesSociais'][number]['plataforma']): string {
    switch (plataforma) {
        case 'linkedin': return 'mdi:linkedin';
        case 'github': return 'mdi:github';
        case 'website': return 'mdi:web';
        case 'twitter': return 'mdi:twitter';
        default: return 'mdi:link-variant';
    }
}
---

<PaginaInterna>
 <div class="perfil-container" transition:animate="fade">
  <header class="perfil-header">
   <img src={membro.foto} alt={`Foto de ${membro.nome}`} class="perfil-foto" />
   <div class="perfil-identidade">
    <h1 class="perfil-nome">{membro.nome}</h1>
    <p class="perfil-cargo">{membro.cargo}</p>
    <div class="perfil-redes">
     {membro.redesSociais.map(rede => (
      <a
       href={rede.url}
       target="_blank"
       rel="noopener noreferrer"
       class="perfil-rede-link"
       aria-label={`Perfil de ${membro.nome} no ${rede.plataforma}`}
      >
       <Icon name={getIconName(rede.plataforma)} />
       {rede.plataforma.charAt(0).toUpperCase() + rede.plataforma.slice(1)}
      </a>
     ))}
    </div>
   </div>
  </header>

  <div class="perfil-conteudo">
   <div class="secao-bio">
    <h2>Sobre {membro.nome.split(' ')[0]}</h2>
    <p>{membro.resumo}</p>
   </div>

   <div class="secao-skills">
    <h2>Principais Habilidades</h2>
    <div class="skills-grid">
     {membro.skills.map(skill => (
      <div class="skill-card">
       <Icon name={skill.icone || 'mdi:check-decagram'} class="skill-icone" />
       <span>{skill.nome}</span>
      </div>
     ))}
    </div>
   </div>
  </div>
 </div>
</PaginaInterna>

<style>
 .perfil-header { display: flex; flex-direction: column; align-items: center; gap: 24px; background-color: var(--cor-fundo-secundario); padding: 32px; border-radius: 8px; margin-bottom: 40px; text-align: center; }
 .perfil-foto { width: 150px; height: 150px; border-radius: 50%; object-fit: cover; border: 4px solid var(--cor-destaque); flex-shrink: 0; }
 .perfil-nome { font-size: 2.5rem; margin: 0; }
 .perfil-cargo { font-size: 1.2rem; color: var(--cor-texto-secundario); margin: 4px 0 16px 0; }
 .perfil-redes { display: flex; flex-wrap: wrap; justify-content: center; gap: 16px; }
 .perfil-rede-link { display: inline-flex; align-items: center; gap: 8px; color: var(--cor-texto-secundario); text-decoration: none; font-weight: 500; transition: color 0.3s; }
 .perfil-rede-link:hover { color: var(--cor-destaque); }
 .perfil-rede-link .icon { font-size: 1.3rem; }
 .perfil-conteudo h2 { font-size: 1.8rem; color: var(--cor-destaque); border-bottom: 2px solid #374151; padding-bottom: 8px; margin-bottom: 24px; margin-top: 40px; }
 .secao-bio p { font-size: 1.1rem; line-height: 1.8; color: var(--cor-texto-secundario); max-width: 75ch; }
 .skills-grid { display: flex; flex-wrap: wrap; gap: 12px; }
 .skill-card { display: flex; align-items: center; gap: 8px; background-color: var(--cor-fundo-secundario); padding: 10px 16px; border-radius: 6px; font-size: 0.9rem; font-weight: 500; }
 .skill-icone { color: var(--cor-destaque); font-size: 1.2rem; }

 @media (min-width: 768px) {
  .perfil-header { flex-direction: row; text-align: left; gap: 32px; }
  .perfil-redes { justify-content: flex-start; }
 }
</style>